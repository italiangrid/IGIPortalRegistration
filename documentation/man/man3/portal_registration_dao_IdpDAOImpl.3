.TH "portal::registration::dao::IdpDAOImpl" 3 "Wed Jul 13 2011" "Version 4" "Registration" \" -*- nroff -*-
.ad l
.nh
.SH NAME
portal::registration::dao::IdpDAOImpl \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBportal.registration.dao.IdpDAO\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsave\fP (\fBIdp\fP transientInstance)"
.br
.ti -1c
.RI "void \fBdelete\fP (\fBIdp\fP persistentInstance)"
.br
.ti -1c
.RI "\fBIdp\fP \fBfindById\fP (Integer id)"
.br
.ti -1c
.RI "List< \fBIdp\fP > \fBgetAllIdp\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "SessionFactory \fBsessionFactory\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final Logger \fBlog\fP = Logger.getLogger(IdpDAOImpl.class)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 15 of file IdpDAOImpl.java.
.SH "Member Function Documentation"
.PP 
.SS "void portal.registration.dao.IdpDAOImpl.delete (\fBIdp\fPpersistentInstance)"
.PP
Implements \fBportal.registration.dao.IdpDAO\fP.
.PP
Definition at line 34 of file IdpDAOImpl.java.
.PP
References portal.registration.dao.IdpDAOImpl.log, and portal.registration.dao.IdpDAOImpl.sessionFactory.
.PP
.nf
                                                   {
                log.debug('removing Idp instance');
                try {
                        Session session = sessionFactory.getCurrentSession();
                        session.delete(persistentInstance);
                        log.debug('remove successful');
                } catch (RuntimeException re) {
                        log.error('remove failed', re);
                        throw re;
                }
        }
.fi
.SS "\fBIdp\fP portal.registration.dao.IdpDAOImpl.findById (Integerid)"
.PP
Implements \fBportal.registration.dao.IdpDAO\fP.
.PP
Definition at line 46 of file IdpDAOImpl.java.
.PP
References portal.registration.dao.IdpDAOImpl.log, and portal.registration.dao.IdpDAOImpl.sessionFactory.
.PP
.nf
                                        {
                log.debug('getting Idp instance with id: ' + id);
                try {
                        Session session = sessionFactory.getCurrentSession();
                        Idp instance = (Idp) session.get(Idp.class, id);
                        log.debug('get successful');
                        return instance;
                } catch (RuntimeException re) {
                        log.error('get failed', re);
                        throw re;
                }
        }
.fi
.SS "List<\fBIdp\fP> portal.registration.dao.IdpDAOImpl.getAllIdp ()"
.PP
Implements \fBportal.registration.dao.IdpDAO\fP.
.PP
Definition at line 60 of file IdpDAOImpl.java.
.PP
References portal.registration.dao.IdpDAOImpl.log, and portal.registration.dao.IdpDAOImpl.sessionFactory.
.PP
.nf
                                     {
                log.debug('getting all Idp instance');
                try {

                        Session session = sessionFactory.getCurrentSession();

                        // Create a Hibernate query (HQL)
                        Query query = session.createQuery('FROM  Idp');

                        // Retrieve all
                        return query.list();
                } catch (RuntimeException re) {
                        log.error('get failed', re);
                        throw re;
                }
        }
.fi
.SS "void portal.registration.dao.IdpDAOImpl.save (\fBIdp\fPtransientInstance)"
.PP
Implements \fBportal.registration.dao.IdpDAO\fP.
.PP
Definition at line 22 of file IdpDAOImpl.java.
.PP
References portal.registration.dao.IdpDAOImpl.log, and portal.registration.dao.IdpDAOImpl.sessionFactory.
.PP
.nf
                                                {
                log.debug('persisting Idp instance');
                try {
                        Session session = sessionFactory.getCurrentSession();
                        session.save(transientInstance);
                        log.debug('persist successful');
                } catch (RuntimeException re) {
                        log.error('persist failed', re);
                        throw re;
                }
        }
.fi
.SH "Member Data Documentation"
.PP 
.SS "final Logger \fBportal.registration.dao.IdpDAOImpl.log\fP = Logger.getLogger(IdpDAOImpl.class)\fC [static, private]\fP"
.PP
Definition at line 17 of file IdpDAOImpl.java.
.PP
Referenced by portal.registration.dao.IdpDAOImpl.delete(), portal.registration.dao.IdpDAOImpl.findById(), portal.registration.dao.IdpDAOImpl.getAllIdp(), and portal.registration.dao.IdpDAOImpl.save().
.SS "SessionFactory \fBportal.registration.dao.IdpDAOImpl.sessionFactory\fP\fC [private]\fP"
.PP
Definition at line 20 of file IdpDAOImpl.java.
.PP
Referenced by portal.registration.dao.IdpDAOImpl.delete(), portal.registration.dao.IdpDAOImpl.findById(), portal.registration.dao.IdpDAOImpl.getAllIdp(), and portal.registration.dao.IdpDAOImpl.save().

.SH "Author"
.PP 
Generated automatically by Doxygen for Registration from the source code.
