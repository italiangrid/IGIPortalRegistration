.TH "portal::registration::dao::VoDAOImpl" 3 "Wed Jul 13 2011" "Version 4" "Registration" \" -*- nroff -*-
.ad l
.nh
.SH NAME
portal::registration::dao::VoDAOImpl \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBportal.registration.dao.VoDAO\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "List< \fBVo\fP > \fBgetAllVo\fP ()"
.br
.ti -1c
.RI "\fBVo\fP \fBfindById\fP (Integer id)"
.br
.ti -1c
.RI "List< String > \fBgetAllDiscipline\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "SessionFactory \fBsessionFactory\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final Logger \fBlog\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 16 of file VoDAOImpl.java.
.SH "Member Function Documentation"
.PP 
.SS "\fBVo\fP portal.registration.dao.VoDAOImpl.findById (Integerid)"
.PP
Implements \fBportal.registration.dao.VoDAO\fP.
.PP
Definition at line 42 of file VoDAOImpl.java.
.PP
References portal.registration.dao.VoDAOImpl.log, and portal.registration.dao.VoDAOImpl.sessionFactory.
.PP
.nf
                                       {
                log.debug('getting UserInfo instance with id: ' + id);
                try {
                        Session session = sessionFactory.getCurrentSession();
                        Vo instance = (Vo) session.get(Vo.class, id);
                        log.debug('get successful');
                        return instance;
                } catch (RuntimeException re) {
                        log.error('get failed', re);
                        throw re;
                }
        }
.fi
.SS "List<String> portal.registration.dao.VoDAOImpl.getAllDiscipline ()"
.PP
Implements \fBportal.registration.dao.VoDAO\fP.
.PP
Definition at line 56 of file VoDAOImpl.java.
.PP
References portal.registration.dao.VoDAOImpl.log, and portal.registration.dao.VoDAOImpl.sessionFactory.
.PP
.nf
                                               {
                log.debug('getting all Vo instance');
                try {

                        Session session = sessionFactory.getCurrentSession();

                        // Create a Hibernate query (HQL)
                        Query query = session
                                        .createSQLQuery('SELECT DISTINCT Discipline FROM  VO');

                        // Retrieve all
                        return query.list();
                } catch (RuntimeException re) {
                        log.error('get failed', re);
                        throw re;
                }
        }
.fi
.SS "List<\fBVo\fP> portal.registration.dao.VoDAOImpl.getAllVo ()"
.PP
Implements \fBportal.registration.dao.VoDAO\fP.
.PP
Definition at line 25 of file VoDAOImpl.java.
.PP
References portal.registration.dao.VoDAOImpl.log, and portal.registration.dao.VoDAOImpl.sessionFactory.
.PP
.nf
                                   {
                log.debug('getting all Vo instance');
                try {

                        Session session = sessionFactory.getCurrentSession();

                        // Create a Hibernate query (HQL)
                        Query query = session.createQuery('FROM  Vo');

                        // Retrieve all
                        return query.list();
                } catch (RuntimeException re) {
                        log.error('get failed', re);
                        throw re;
                }
        }
.fi
.SH "Member Data Documentation"
.PP 
.SS "final Logger \fBportal.registration.dao.VoDAOImpl.log\fP\fC [static, private]\fP"\fBInitial value:\fP
.PP
.nf
 Logger
                        .getLogger(UserInfoServiceImpl.class)
.fi
.PP
Definition at line 18 of file VoDAOImpl.java.
.PP
Referenced by portal.registration.dao.VoDAOImpl.findById(), portal.registration.dao.VoDAOImpl.getAllDiscipline(), and portal.registration.dao.VoDAOImpl.getAllVo().
.SS "SessionFactory \fBportal.registration.dao.VoDAOImpl.sessionFactory\fP\fC [private]\fP"
.PP
Definition at line 22 of file VoDAOImpl.java.
.PP
Referenced by portal.registration.dao.VoDAOImpl.findById(), portal.registration.dao.VoDAOImpl.getAllDiscipline(), and portal.registration.dao.VoDAOImpl.getAllVo().

.SH "Author"
.PP 
Generated automatically by Doxygen for Registration from the source code.
